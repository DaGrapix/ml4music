rm(list=ls(name=env), pos=env)
}
### Dataset complet
data.0 <- df$data.0
data.train.0 <- df$data.train.0
data.test.0 <- df$data.test.0
x.train.0 <- data.train.0[,-ncol(data.train.0)] %>% as.matrix()
y.train.0 <- data.train.0[,ncol(data.train.0)] %>% as.factor()
x.test.0 <- data.test.0[,-ncol(data.test.0)] %>% as.matrix()
y.test.0 <- data.test.0[,ncol(data.test.0)] %>% as.factor()
knn.ctrl <- trainControl(method="cv", number=10)
## modele k=1
k.1 <- expand.grid(k=1)
knn.1.0 <- train(x=x.train.0, y=y.train.0, method="knn", trControl=knn.ctrl, tuneGrid=k.1, preProcess=c("center", "scale"))
unregister_dopar()
### Dataset complet
data.0 <- df$data.0
data.train.0 <- df$data.train.0
data.test.0 <- df$data.test.0
x.train.0 <- data.train.0[,-ncol(data.train.0)] %>% as.matrix()
y.train.0 <- data.train.0[,ncol(data.train.0)] %>% as.factor()
x.test.0 <- data.test.0[,-ncol(data.test.0)] %>% as.matrix()
y.test.0 <- data.test.0[,ncol(data.test.0)] %>% as.factor()
knn.ctrl <- trainControl(method="cv", number=10)
## modele k=1
k.1 <- expand.grid(k=1)
knn.1.0 <- train(x=x.train.0, y=y.train.0, method="knn", trControl=knn.ctrl, tuneGrid=k.1, preProcess=c("center", "scale"))
print(knn.1.0)
knn.1.0$bestTune
knn.1.0$levels
knn.1.0$pred
knn.1.0$modelInfo
knn.1.0$call
knn.1.0$call$x
knn.1.0$call$y
knn.1.0$call$method
#Erreurs
knn.pred.train.1.0 <- predict(knn.1.0, newdata = x.train.0)
err.train.knn.1.0 <- mean(knn.pred.train.1.0 != y.train.0)
err.train.knn.1.0
knn.pred.test.1.0 <- predict(knn.1.0, newdata = x.test.0)
err.test.knn.1.0 <- mean(knn.pred.test.1.0 != y.test.0)
err.test.knn.1.0
## Validation croisée
set.seed(556)
k.grid <- expand.grid(k=1:30)
#Calculs paralleles
cl <- makePSOCKcluster(7)
registerDoParallel(cl)
#choix du modèle optimal
knn.0 <- train(x=x.train.0, y=y.train.0, method="knn", trControl=knn.ctrl, tuneGrid=k.grid, preProcess=c("center", "scale"))
stopCluster(cl)
print(knn.0)
#meilleur modèle obtenu pour k=1
plot(knn.0)
#Erreurs
knn.pred.train.0 <- predict(knn.0, newdata = x.train.0)
err.train.knn.0 <- mean(knn.pred.train.0 != y.train.0)
err.train.knn.0
knn.pred.test.0 <- predict(knn.0,newdata = x.test.0)
err.test.knn.0 <- mean(knn.pred.test.0 != y.test.0)
err.test.knn.0
unregister.dopar <- function() {
env <- foreach:::.foreachGlobals
rm(list=ls(name=env), pos=env)
}
unregister.dopar()
setwd("F:/ZZ/STA203/TP8")
library(ggplot2)
rm(list=objects());graphics.off()
########################## Détecteur de spam  ###################
#### TREVOR et HASTIE http://www-stat.stanford.edu/~tibs/ElemStatLearn/
spam = read.table("spam.data")
dim(spam) # 4601 x 58
p = ncol(spam)-1          # nombre de variables explicatives
n = nrow(spam)
names(spam)[p+1] = "Y"
###############################
### Q1- analyse descriptive
###############################
pdf("spam-boxplot-pairs.pdf")
par(mfrow=c(3,3))
apply(cbind(paste("V",1:p,sep="")),1, function(x)
{boxplot(spam[,x]~spam$Y,xlab=x, horizontal=TRUE);return()  })
dev.off()
pdf("spam-corrplot.pdf")
#pdf("spam-corrplot.pdf")
par(mfrow=c(1,1))
corrplot::corrplot(cor(spam),method = "square")
dev.off()
### quelques plots
myplot = function(x,Y,xlab=""){
plot(x,Y,xlab=xlab, col=Y+1,pch=Y+1);
boxplot(x~Y,xlab=xlab,horizontal=TRUE)
}
par(mfcol=c(2,1))
# fortes valeurs diminuent la proba de spam
myplot(spam$V26,spam$Y,"V26")
myplot(spam$V46,spam$Y,"V46")
setwd("F:/ZZ/sta203_projet")
#Mini projet
#Anthony Kalaydjian - Mathieu Occhipinti
library(ggplot2)
library(plyr)
library(stats)
library(tidyverse)
library(cowplot)
library(ROCR)
library(MASS)
library(glmnet)
library(corrplot)
library(caret)
library(class)
library(doParallel)
setwd(getwd())
rm(list=ls())
graphics.off()
####################################
############# Partie 1 #############
####################################
############################    Q1
## importation des données
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
dim(data)
#Les données ont bien été importées
#Remarque: on garde une copie du dataframe original
data.0 <- read.csv("Music_2023.txt",sep=";",header=TRUE)
## Analyse uni et bi variée
myplot = function(x, Y, xlab=""){
plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
myplot(x=data.0$PAR_TC, Y=data$GENRE)
myplot = function(x, Y, xlab=""){
plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data$GENRE)
library(ggplot2)
library(plyr)
library(stats)
library(tidyverse)
library(cowplot)
library(ROCR)
library(MASS)
library(glmnet)
library(corrplot)
library(caret)
library(class)
library(doParallel)
setwd(getwd())
rm(list=ls())
graphics.off()
library(ggplot2)
library(plyr)
library(stats)
library(tidyverse)
library(cowplot)
library(ROCR)
library(MASS)
library(glmnet)
library(corrplot)
library(caret)
library(class)
library(doParallel)
################################
####################################
############# Partie 1 #############
####################################
############################    Q1
## importation des données
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
dim(data)
#Les données ont bien été importées
#Remarque: on garde une copie du dataframe original
data.0 <- read.csv("Music_2023.txt",sep=";",header=TRUE)
## Analyse uni et bi variée
myplot = function(x, Y, xlab=""){
plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data$GENRE)
data.0$PAR_TC
summary(data.0$PAR_TC)
myplot(x=data.0$PAR_TC, Y=data.0$GENRE)
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="")
myplot = function(x, Y, xlab=""){
#plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
myplot = function(x, Y, xlab=""){
plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=as.factot(data.0$GENRE), xlab="PAR_TC")
myplot = function(x, Y, xlab=""){
plot(x, Y, xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=ifelse(data.0$GENRE=="Jazz", 1, 0), xlab="PAR_TC")
myplot = function(x, Y, xlab=""){
plot(x, ifelse(Y=="Jazz", 1, 0), xlab=xlab, col=Y+1, pch=Y+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
myplot = function(x, Y, xlab=""){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1);
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
myplot = function(x, Y, xlab=""){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE2, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE3, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE4, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE6, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE7, Y=data.0$GENRE, xlab="PAR_ASE1")
names(data.0)
index.ASE <- c(4:37)
myplot(x=data.0[,index.ASE], Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1")
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10")
myplot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20")
summary(data.0$PAR_ASE1)
summary(data.0$PAR_ASE10)
summary(data.0$PAR_ASE20)
summary(data.0$PAR_ASE30)
myplot = function(x, Y, xlab="", xlim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE)
}
myplot = function(x, Y, xlab="", xlim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE, xlim=xlim)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", xlim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", xlim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", xlim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", xlim=c(-0.3, 0))
myplot = function(x, Y, xlab="", xlim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=xlim)
}
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", xlim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", xlim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", xlim=c(-0.3, 0))
myplot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=xlim)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
myplot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y");
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=ylim)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
myplot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y", xlim=ylim);
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=ylim)
}
par(mfcol=c(2,1))
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
myplot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
a="PAR_ASE1"
data.0$a
data.0$eval(a)
data.0$eval(as.symbol(a))
data.0@a
a="PAR_ASE1"
data.0@a
eval(a)
data.0$eval(a)
eval(a)
as.symbol(eval(a))
data.0$as.symbol(eval(a))
as.symbol(eval(a))
data.0$as.symbol(eval(a))
data.0[[a]]
data.0[[a]]
a=c("PAR_ASE")
b = c(1, 2, 3)
paste(a, b)
?paste
paste(a, b, collapse=TRUE)
paste(a, b, sep="")
my.new.plot <- function(variable, index, x, Y, ylim){
names <- paste(variable, index, sep="")
myplot(x=data.0[[names]], Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
}
my.new.plot <- function(variable, index, data, ylim){
names <- paste(variable, index, sep="")
myplot(x=data.0[[names]], Y=data[,-ncol(data)], xlab=eval(names), ylim=ylim)
}
my.new.plot(variable=a, index=b, data=data.0, ylim=c(-0.3, 0))
my.new.plot <- function(variable, index, data, ylim=c()){
names <- paste(variable, index, sep="")
lapply(names ,FUN=function(x) myplot(x=data.0[[x]], Y=data[,-ncol(data)], xlab=eval(x), ylim=ylim))
}
my.new.plot(variable=a, index=b, data=data.0, ylim=c(-0.3, 0))
my.new.plot <- function(variable, index, data, ylim=c()){
names <- paste(variable, index, sep="")
sapply(names ,FUN=function(x) myplot(x=data.0[[x]], Y=data[,-ncol(data)], xlab=eval(x), ylim=ylim))
}
a=c("PAR_ASE")
b = c(1, 2, 3)
my.new.plot(variable=a, index=b, data=data.0, ylim=c(-0.3, 0))
names(data.0)
a <- "PAR_ASE"
b <- c(1:34)
ASE.names <- paste("PAR_ASE", c(1:34), sep="")
ASE.names
data.0$ASE.names
data.0$eval(ASE.names)
ASE.indices <- which(names(data.0) %in% ASE.names)
ASE.indices
corr.ASE <- cor(data[,ASE.indices])
corrplot(corr.ASE)
names(data.0)
SFM.names <- paste("PAR_SFM", c(1:24), sep="")
SFM.names <- paste("PAR_SFM", c(1:24), sep="")
SFM.indices <- which(names(data.0) %in% SFM.names)
corr.SFM <- cor(data[,SFM.indices])
corrplot(corr.ASE)
corrplot(corr.SFM)
?corrplot
ASE.names <- paste("PAR_ASE", c(1:34), sep="")
ASE.indices <- which(names(data.0) %in% ASE.names)
corr.ASE <- cor(data[,ASE.indices])
corrplot(corr.ASE, title="Corr ASE")
par(mfcol=c(1,1))
ASE.names <- paste("PAR_ASE", c(1:34), sep="")
ASE.indices <- which(names(data.0) %in% ASE.names)
corr.ASE <- cor(data[,ASE.indices])
corrplot(corr.ASE, title="Corr ASE")
SFM.names <- paste("PAR_SFM", c(1:24), sep="")
SFM.indices <- which(names(data.0) %in% SFM.names)
corr.SFM <- cor(data[,SFM.indices])
corrplot(corr.SFM, title="Corr SFM")
corrplot(corr.ASE, title="Corr ASE")
names(data.0)
my.plot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y", xlim=ylim);
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=ylim)
}
par(mfcol=c(2,1))
my.plot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
my.plot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y", xlim=ylim);
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=ylim)
}
par(mfcol=c(2,1))
my.plot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
my.plot(x=data.0$PAR_3RMS_TCD, Y=data.0$GENRE, xlab="PAR_3RMS_TCD")
my.plot(x=data.0$PAR_MFCCV15, Y=data.0$GENRE, xlab="PAR_MFCCV15")
my.plot(x=data.0$PAR_1RMS_TCD, Y=data.0$GENRE, xlab="PAR_1RMS_TCD")
par(mfcol=c(1,1))
my.plot = function(x, Y, xlab="", ylim=c()){
Y.bin <- ifelse(Y=="Jazz", 1, 0)
#plot(x, Y.bin, xlab=xlab, col=Y.bin+1, pch=Y.bin+1, ylab="Y", xlim=ylim);
boxplot(x~Y, xlab=xlab, horizontal=TRUE, ylim=ylim)
}
my.plot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
my.plot(x=data.0$PAR_3RMS_TCD, Y=data.0$GENRE, xlab="PAR_3RMS_TCD")
my.plot(x=data.0$PAR_MFCCV15, Y=data.0$GENRE, xlab="PAR_MFCCV15")
my.plot(x=data.0$PAR_1RMS_TCD, Y=data.0$GENRE, xlab="PAR_1RMS_TCD")
my.plot(x=data.0$PAR_3RMS_TCD, Y=data.0$GENRE, xlab="PAR_3RMS_TCD")
my.plot(x=data.0$PAR_3RMS_TCD, Y=data.0$GENRE, xlab="PAR_3RMS_TCD")
my.plot(x=data.0$PAR_3RMS_TCD_10FR_VAR, Y=data.0$GENRE, xlab="PAR_3RMS_TCD_10FR_VAR")
my.plot(x=data.0$PAR_SC_V, Y=data.0$GENRE, xlab="PAR_SC_V")
my.plot(x=data.0$PAR_SC_V, Y=data.0$GENRE, xlab="PAR_SC_V")
my.plot(x=data.0$PAR_1RMS_TCD, Y=data.0$GENRE, xlab="PAR_1RMS_TCD")
my.plot(x=data.0$PAR_SC_V, Y=data.0$GENRE, xlab="PAR_SC_V")
my.plot(x=data.0$PAR_PEAK_RMS_TOT, Y=data.0$GENRE, xlab="PAR_PEAK_RMS_TOT")
my.plot(x=data.0$PAR_3RMS_TCD_10FR_VAR, Y=data.0$GENRE, xlab="PAR_3RMS_TCD_10FR_VAR")
my.plot(x=data.0$PAR_SC_V, Y=data.0$GENRE, xlab="PAR_SC_V")
my.plot(x=data.0$PAR_PEAK_RMS_TOT, Y=data.0$GENRE, xlab="PAR_PEAK_RMS_TOT")
my.plot(x=data.0$PAR_ZCD, Y=data.0$GENRE, xlab="PAR_ZCD")
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
par(mfcol=c(2,4))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.3, 0))
par(mfrow=c(2,4))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.3, 0))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.25, -0.05))
par(mfrow=c(2,4))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.25, -0.05))
dim(data.0)
ASE.SFM.mix.indices <- c(paste("PAR_SFM", c(1:5), sep=""), ASE.names <- paste("PAR_ASE", c(1:5), sep=""))
ASE.SFM.mix.indices <- c(paste("PAR_SFM", c(1:5), sep=""), ASE.names <- paste("PAR_ASE", c(1:5), sep=""))
corr.ASE.SFM.mix <- cor(data[,ASE.SFM.mix.indices])
corrplot(corr.ASE.SFM.mix, title="Corr SFM")
corrplot(corr.ASE.SFM.mix)
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.25, -0.05))
par(mfcol=c(1,1))
my.plot(x=data.0$PAR_TC, Y=data.0$GENRE, xlab="PAR_TC")
my.plot(x=data.0$PAR_3RMS_TCD, Y=data.0$GENRE, xlab="PAR_3RMS_TCD")
my.plot(x=data.0$PAR_MFCCV15, Y=data.0$GENRE, xlab="PAR_MFCCV15")
my.plot(x=data.0$PAR_1RMS_TCD, Y=data.0$GENRE, xlab="PAR_1RMS_TCD")
my.plot(x=data.0$PAR_PEAK_RMS_TOT, Y=data.0$GENRE, xlab="PAR_PEAK_RMS_TOT")
my.plot(x=data.0$PAR_ZCD, Y=data.0$GENRE, xlab="PAR_ZCD")
par(mfrow=c(2,4))
my.plot(x=data.0$PAR_ASE1, Y=data.0$GENRE, xlab="PAR_ASE1", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE5, Y=data.0$GENRE, xlab="PAR_ASE5", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE10, Y=data.0$GENRE, xlab="PAR_ASE10", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE15, Y=data.0$GENRE, xlab="PAR_ASE15", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE20, Y=data.0$GENRE, xlab="PAR_ASE20", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE25, Y=data.0$GENRE, xlab="PAR_ASE25", ylim=c(-0.25, -0.05))
my.plot(x=data.0$PAR_ASE30, Y=data.0$GENRE, xlab="PAR_ASE30", ylim=c(-0.25, -0.05))
par(mfcol=c(1,1))
ASE.names <- paste("PAR_ASE", c(1:34), sep="")
ASE.indices <- which(names(data.0) %in% ASE.names)
corr.ASE <- cor(data[,ASE.indices])
corrplot(corr.ASE, title="Corr ASE")
SFM.names <- paste("PAR_SFM", c(1:24), sep="")
SFM.indices <- which(names(data.0) %in% SFM.names)
corr.SFM <- cor(data[,SFM.indices])
corrplot(corr.SFM, title="Corr SFM")
SFM.names <- paste("PAR_SFM", c(1:24), sep="")
SFM.indices <- which(names(data.0) %in% SFM.names)
corr.SFM <- cor(data[,SFM.indices])
corrplot(corr.SFM, title="Corr SFM")
ASE.SFM.mix.indices <- c(paste("PAR_SFM", c(1:5), sep=""), ASE.names <- paste("PAR_ASE", c(1:5), sep=""))
corr.ASE.SFM.mix <- cor(data[,ASE.SFM.mix.indices])
corrplot(corr.ASE.SFM.mix)
