<<<<<<< HEAD
install.packages("plyr")
=======
high.corr.index <- high.corr.index[-self.corr.indices,]
high.corr.index
View(high.corr.index)
corr <- cor(x=data[,-p])
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#remove diagonal elements
c1 <- high.corr.index[,1]
c2 <- high.corr.index[,2]
self.corr.indices <- which(c1==c2)
high.corr.index <- high.corr.index[-self.corr.indices,]
high.corr.index
corr
dim(corr)
?lower.tri
lower.tri(corr, diag=FALSE)
M <- lower.tri(corr, diag=FALSE)
high.corr.index <- which(M[high.corr.index])
high.corr.index
r
corr <- cor(x=data[,-p])
M <- lower.tri(corr, diag=FALSE)
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
high.corr.index <- high.corr.index[which(M[high.corr.index]),]
View(high.corr.index)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]),]
high.corr.index
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]),]
View(high.corr.index)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index])==TRUE,]
high.corr.index
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index])==TRUE,]
high.corr.index
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index])=TRUE,]
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]==TRUE),]
high.corr.index
names(data)
correlated.variables <- c(names(data)[1, high.corr.index[,1]])
names(data)[1]
correlated.variables <- c(names(data)[high.corr.index[,1]])
correlated.variables <- c(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]])
correlated.variables
correlated.variables <- as.matrix(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]])
correlated.variables
correlated.variables <- matrix(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]])
?matrix
correlated.variables <- matrix(names(data)[c(high.corr.index[,1]],
correlated.variables <- matrix(names(data)[c(high.corr.index[,1]],
correlated.variables <- matrix(c(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]]), nrow=nrow(high.corr.index))
correlated.variables
print.matrix(correlated.variables)
table(correlated.variables)
print(correlated.variables)
correlated.variables
new.data <- data[-128:147,]
new.data <- data[-c(128:147),]
data.new <- data[-c(128:147),]
n.new <- nrow(data.new)
n.new <- ncol(data.new)
data.new <- data[-c(128:147),]
n.new <- nrow(data.new)
p.new <- ncol(data.new)
corr <- cor(x=data.new[,-p.new])
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]==TRUE),]
high.corr.index
correlated.variables <- matrix(c(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]]), nrow=nrow(high.corr.index))
correlated.variables
dim(data.new)
dim(data)
data.new <- data[,-c(128:147)]
n.new <- nrow(data.new)
p.new <- ncol(data.new)
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]==TRUE),]
high.corr.index
correlated.variables <- matrix(c(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]]), nrow=nrow(high.corr.index))
correlated.variables
data.new <- data[,-c(128:147)]
data.new$PAR_SC <- log(data.new$PAR_SC)
data.new$PAR_SC_V <- log(data.new$PAR_SC_V)
n.new <- nrow(data.new)
p.new <- ncol(data.new)
data$PAR_SC
data.new$PAR_SC
data
data.new <- data[,-c(128:147)]
data.new$PAR_SC <- log(data.new$PAR_SC)
data.new$PAR_SC_V <- log(data.new$PAR_SC_V)
n.new <- nrow(data.new)
p.new <- ncol(data.new)
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index <- high.corr.index[which(lower.tri[high.corr.index]==TRUE),]
high.corr.index
correlated.variables <- matrix(c(names(data)[high.corr.index[,1]],
names(data)[high.corr.index[,2]]), nrow=nrow(high.corr.index))
correlated.variables
?apply
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index))
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index))
correlated.variables
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index))
correlated.variables
high.corr.index <- which(names(data)==correlated.variables)
high.corr.index <- which(names(data)==c(correlated.variables))
high.corr.index
correlated.variables
c(correlated.variables)
names(data)
high.corr.index <- which(names(data) in c(correlated.variables))
high.corr.index <- which(names(data)=c(correlated.variables))
high.corr.index <- which(names(data)==c(correlated.variables))
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index))
corr <- cor(x=data.new[,-p.new])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
high.corr.index <- which(names(data)==c(correlated.variables))
high.corr.index
as.vector(correlated.variables)
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
high.corr.index <- which(names(data)==as.vector(correlated.variables))
high.corr.index
as.vector(correlated.variables)
names(data)==as.vector(correlated.variables)
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
high.corr.index <- which(names(data)==as.vector(correlated.variables))
high.corr.index
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
high.corr.index <- which(names(data)==as.vector(correlated.variables))
print(high.corr.index)
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
name.list
high.corr.index <- which(names(data)==name.list)
high.corr.index
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data)==name.list)
high.corr.index
correlated.variables <- matrix(c(names(data.new)[high.corr.index.new[,1]],
names(data.new)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
names(data)==name.list
names(data)==name.list==TRUE
(names(data)==name.list)==TRUE
which(names(data)==name.list)
correlated.variables
names(data)
data.new
corr <- cor(x=data.new[,-p.new])
corrplot(corr)
library(corrplot)
corrplot(corr)
data <- data[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
data.old <- data
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
data.old <- data
n.old <- n
p.old <- p
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data)==name.list)
high.corr.index
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
n
n.old
p
p.old
data[,p.old]
data[,p.old]
data[p.old,]
data[, p]
data$PAR_SC
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data.old <- data
data.old <- data
n.old <- n
p.old <- p
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data)==name.list)
high.corr.index
name.list
names(data)==name.list
high.corr.index <- data$name.list
high.corr.index
grep(name.list, colnames(data))
sapply(name.list, function(x) grep(x, colnames(data)))
colnames(data)
names(data)
sapply(name.list, function(x) grep(x, names(data)))
data$PAR_ZCD
View(data)
data[, 160]
names(data)[160]
names(data)[164]
correlated.variables
name.list <- as.vector(correlated.variables)
name.list
data$name.list
high.corr.index <- which(names(data)==name.list)
high.corr.index
high.corr.index <- which(names(data) in name.list)
high.corr.index <- which(names(data) %in% name.list)
high.corr.index
high.corr.index <- which(names(data) %in% name.list) %>% matrix(, nrow=nrow(high.corr.index.new))
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data) %in% name.list) %>% matrix(, nrow=nrow(high.corr.index.new))
high.corr.index
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data.old <- data
n.old <- n
p.old <- p
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
rm(list=ls())
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
rm(list=ls())
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data.old <- data
n.old <- n
p.old <- p
rm(list=ls())
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data.old <- data
n.old <- nrow(data)
p.old <- ncol(data)
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data) %in% name.list) %>% matrix(, nrow=nrow(high.corr.index.new))
high.corr.index
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), ncol=nrow(high.corr.index.new))
correlated.variables
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=ncol(high.corr.index.new))
correlated.variables
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data) %in% name.list) %>% matrix(, nrow=nrow(high.corr.index.new))
high.corr.index
name.list <- as.vector(correlated.variables)
high.corr.index <- which(names(data) %in% name.list) %>% matrix(, nrow=nrow(high.corr.index.new))
high.corr.index
high.corr.index
high.corr.index <- matrix(which(names(data) %in% name.list), nrow=nrow(high.corr.index.new))
high.corr.index
new.corr <- cor(var.data)
new.corr <- cor(var.data)
var.data <- as.data.frame(data$PAR_ASE_M, data$PAR_ASE_MV, data$PAR_SFM_M, data$PAR_SFM_MV)
new.corr <- cor(var.data)
var.data
var.data <- as.data.frame(data$PAR_ASE_M, data$PAR_ASE_MV, data$PAR_SFM_M, data$PAR_SFM_MV)
new.corr <- cor(var.data)
var.data <- as.data.frame(data$PAR_ASE_M, data$PAR_ASE_MV, data$PAR_SFM_M, data$PAR_SFM_MV)
var.data <- as.data.frame(c(data$PAR_ASE_M, data$PAR_ASE_MV, data$PAR_SFM_M, data$PAR_SFM_MV))
var.data <- as.data.frame(data$PAR_ASE_M, data$PAR_ASE_MV, data$PAR_SFM_M, data$PAR_SFM_MV)
data$PAR_ASE_M
var.data <- as.data.frame(PAR_ASE_M=data$PAR_ASE_M, PAR_ASE_MV=data$PAR_ASE_MV, PAR_SFM_M=data$PAR_SFM_M, PAR_SFM_MV=data$PAR_SFM_MV)
?as.dataframe
?as.data.frame
var.data <- as.data.frame(data, row.names = c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV"))
data
data[[PAR_ASE_M]]
data[PAR_ASE_M]
data[[PAR_ASE_M,]]
data[[,PAR_ASE_M]]
data[,[PAR_ASE_M]]
data[[PAR_ASE_M]]
data1 <- data[ , ! names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
data1 <- data[ , names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
data1
names(data1)
var.data <- data[ , names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
var.corr <- cor(var.data)
library(corrplot)
corplot(var.corr)
library(corrplot)
corplot(var.corr)
var.corr <- cor(var.data)
corplot(var.corr)
library(corrplot)
var.data <- data[ , names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
var.corr <- cor(var.data)
corplot(var.corr)
library(corplot)
corrplot(var.corr)
high.corr.index.new[,1]]
high.corr.index.new[,1]
data <- data[,-high.corr.index.new[,1]]
data <- data[,-high.corr.index.new[,1]]
n <- nrow(data)
p <- ncol(data)
dim(data)
library(corrplot)
var.data <- data[ , names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
var.corr <- cor(var.data)
corrplot(var.corr)
library(ggplot2)
library(plyr)
library(tidyverse)
rm(list=ls())
setwd(getwd())
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
dim(data)
n <- nrow(data)
p <- ncol(data)
summary(data)
## A FAIRE : Analyse uni-bi variée
##Question : Comment choisir les variables qu'on observe ?
# Proportion des genres musicaux
freq<-count(data,'GENRE')
freq
prop_classical<-freq[1,2]/n
prop_jazz<-freq[2,2]/n
prop_classical
prop_jazz
#ggplot(data, aes(x=reorder(GENRE, GENRE, function(x)-(length(x)/n)))) +
#geom_bar(fill='red') +  labs(x='Genre')
summary(data[,0:20])
summary(data$PAR_SC_V)
summary(data$PAR_SC)
summary(data$PAR_ASC_V)
rm(list=ls())
data <- read.csv("Music_2023.txt",sep=";",header=TRUE)
data.old <- data
n.old <- nrow(data)
p.old <- ncol(data)
data <- data.old[,-c(128:147)]
data$PAR_SC <- log(data$PAR_SC)
data$PAR_SC_V <- log(data$PAR_SC_V)
n <- nrow(data)
p <- ncol(data)
corr <- cor(x=data[,-p])
#selection des indices de la matrice de correlation > 0.99
high.corr.index.new <- which(corr > 0.99, arr.ind = TRUE) %>% unname
#selection des indices appartenant a la matrice triangulaire inferieure stricte,
#pour retirer les doublons, ainsi que les elements diagonaux.
lower.tri <- lower.tri(corr, diag=FALSE)
high.corr.index.new <- high.corr.index.new[which(lower.tri[high.corr.index.new]==TRUE),]
high.corr.index.new
correlated.variables <- matrix(c(names(data)[high.corr.index.new[,1]],
names(data)[high.corr.index.new[,2]]), nrow=nrow(high.corr.index.new))
correlated.variables
name.list <- as.vector(correlated.variables)
high.corr.index <- matrix(which(names(data) %in% name.list), nrow=nrow(high.corr.index.new))
high.corr.index
data <- data[,-high.corr.index.new[,1]]
n <- nrow(data)
p <- ncol(data)
dim(data)
library(corrplot)
var.data <- data[ , names(data) %in% c("PAR_ASE_M", "PAR_ASE_MV", "PAR_SFM_M", "PAR_SFM_MV")]
var.corr <- cor(var.data)
corrplot(var.corr)
>>>>>>> ebc347ea4a64f6bb6c9eb104f74c9b27cfc00c17
